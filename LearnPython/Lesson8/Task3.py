"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список только числами.
 Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.

"""

#Формально это класс исключение, который проверяет на сколько соответсвует текст числу.
class CorrectNumList:
    @staticmethod
    def Correct(num):
        try:
            x = int(num)
        except Exception:
            return False
        return True
lst = []
while True:
    a = input("Введите число или stop для выхода ввода: ")
    if a == "stop": break
    if CorrectNumList.Correct(a) : lst.append(int(a))
    else : print(f"Введённое значение '{a}' не является числом")
print(f"Введённый список: {lst}")
